diff --git a/../steps/04_logical_device/main.go b/../steps/05_window_surface/main.go
index d8a6d43..f78b345 100644
--- a/../steps/04_logical_device/main.go
+++ b/../steps/05_window_surface/main.go
@@ -7,6 +7,8 @@ import (
 	"github.com/vkngwrapper/core/common"
 	"github.com/vkngwrapper/core/core1_0"
 	"github.com/vkngwrapper/extensions/ext_debug_utils"
+	"github.com/vkngwrapper/extensions/khr_surface"
+	vkng_sdl2 "github.com/vkngwrapper/integrations/sdl2"
 	"log"
 )
 
@@ -16,10 +18,11 @@ const enableValidationLayers = true
 
 type QueueFamilyIndices struct {
 	GraphicsFamily *int
+	PresentFamily  *int
 }
 
 func (i *QueueFamilyIndices) IsComplete() bool {
-	return i.GraphicsFamily != nil
+	return i.GraphicsFamily != nil && i.PresentFamily != nil
 }
 
 type HelloTriangleApplication struct {
@@ -28,11 +31,13 @@ type HelloTriangleApplication struct {
 
 	instance       core1_0.Instance
 	debugMessenger ext_debug_utils.DebugUtilsMessenger
+	surface        khr_surface.Surface
 
 	physicalDevice core1_0.PhysicalDevice
 	device         core1_0.Device
 
 	graphicsQueue core1_0.Queue
+	presentQueue  core1_0.Queue
 }
 
 func (app *HelloTriangleApplication) Run() error {
@@ -80,6 +85,11 @@ func (app *HelloTriangleApplication) initVulkan() error {
 		return err
 	}
 
+	err = app.createSurface()
+	if err != nil {
+		return err
+	}
+
 	err = app.pickPhysicalDevice()
 	if err != nil {
 		return err
@@ -111,6 +121,10 @@ func (app *HelloTriangleApplication) cleanup() {
 		app.debugMessenger.Destroy(nil)
 	}
 
+	if app.surface != nil {
+		app.surface.Destroy(nil)
+	}
+
 	if app.instance != nil {
 		app.instance.Destroy(nil)
 	}
@@ -199,6 +213,18 @@ func (app *HelloTriangleApplication) setupDebugMessenger() error {
 	return nil
 }
 
+func (app *HelloTriangleApplication) createSurface() error {
+	surfaceLoader := khr_surface.CreateExtensionFromInstance(app.instance)
+
+	surface, err := vkng_sdl2.CreateSurface(app.instance, surfaceLoader, app.window)
+	if err != nil {
+		return err
+	}
+
+	app.surface = surface
+	return nil
+}
+
 func (app *HelloTriangleApplication) pickPhysicalDevice() error {
 	physicalDevices, _, err := app.instance.EnumeratePhysicalDevices()
 	if err != nil {
@@ -226,6 +252,9 @@ func (app *HelloTriangleApplication) createLogicalDevice() error {
 	}
 
 	uniqueQueueFamilies := []int{*indices.GraphicsFamily}
+	if uniqueQueueFamilies[0] != *indices.PresentFamily {
+		uniqueQueueFamilies = append(uniqueQueueFamilies, *indices.PresentFamily)
+	}
 
 	var queueFamilyOptions []core1_0.DeviceQueueCreateInfo
 	queuePriority := float32(1.0)
@@ -259,6 +288,7 @@ func (app *HelloTriangleApplication) createLogicalDevice() error {
 	}
 
 	app.graphicsQueue = app.device.GetQueue(*indices.GraphicsFamily, 0)
+	app.presentQueue = app.device.GetQueue(*indices.PresentFamily, 0)
 	return nil
 }
 
@@ -281,6 +311,16 @@ func (app *HelloTriangleApplication) findQueueFamilies(device core1_0.PhysicalDe
 			*indices.GraphicsFamily = queueFamilyIdx
 		}
 
+		supported, _, err := app.surface.PhysicalDeviceSurfaceSupport(device, queueFamilyIdx)
+		if err != nil {
+			return indices, err
+		}
+
+		if supported {
+			indices.PresentFamily = new(int)
+			*indices.PresentFamily = queueFamilyIdx
+		}
+
 		if indices.IsComplete() {
 			break
 		}
